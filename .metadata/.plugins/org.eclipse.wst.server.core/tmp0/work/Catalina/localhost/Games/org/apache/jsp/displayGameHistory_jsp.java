/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.13
 * Generated at: 2024-03-04 11:09:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;

public final class displayGameHistory_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!----IT17045940--->\n");
      out.write("<!----Dias A.M.A.P.>\n");
      out.write("<!----G-1.2-------->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n");
      out.write("<title>Games List</title>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"\">\n");
      out.write("<style type=\"text/css\">\n");
      out.write(".container{\n");
      out.write("	border-radius: 5px;\n");
      out.write("	background-color: #000037;\n");
      out.write("	padding: 20px;\n");
      out.write("	width: 1200px;\n");
      out.write("	opacity: 0.8;\n");
      out.write("	margin-left : 100px;\n");
      out.write("/* 	margin-top : 150px;\n");
      out.write(" */	color : white;\n");
      out.write("}\n");
      out.write("\n");
      out.write("a{\n");
      out.write("	text-decoration : none;\n");
      out.write("	color : yellow;\n");
      out.write("}\n");
      out.write("\n");
      out.write("a:hover{\n");
      out.write("	background-color : red;\n");
      out.write("}\n");
      out.write(".button-link1 {\n");
      out.write("	float: left;\n");
      out.write("	margin-top: 0px;\n");
      out.write("	margin-left : 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("	\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	\n");
      out.write("	<div class=\"container\">\n");
      out.write("	");

	try{
		
	String driver = "com.mysql.jdbc.Driver";
	String url = "jdbc.mysql.//localhost:3306/gamingsite?autoReconnect=true&useSSL=false";
	String username = "root";
	String password = "";
	
	Class.forName(driver);
	
	}catch(Exception e){
		e.printStackTrace();
	}

	Connection connection = null;
	Statement statement = null;
	ResultSet resultset = null;

	
      out.write("\n");
      out.write("	<h2 class = \"user\" align=\"center\">\n");
      out.write("		<font><strong>Games Record History</strong></font>\n");
      out.write("	</h2>\n");
      out.write("	<table align=\"center\" cellpadding=\"15\" cellspacing=\"5\" border=\"1\">\n");
      out.write("		<tr>\n");
      out.write("		\n");
      out.write(" 		\n");
      out.write(" 	\n");
      out.write("\n");
      out.write("		</tr>\n");
      out.write("		<tr>\n");
      out.write("			<td><b>GameID</b></td>\n");
      out.write("			<td><b>GameName</b></td>\n");
      out.write("			<td><b>Price</b></td>\n");
      out.write("			<td><b>Size</b></td>\n");
      out.write("			<!-- <td><b>Requirements</b></td>\n");
      out.write("			<td><b>Description</b></td> -->\n");
      out.write("			<td><b><a href=\"AddGame.jsp\">Add New Data</a></b></td>\n");
      out.write("			<td><b><a href=\"DeleteGame\">Delete Records</a></b></td>\n");
      out.write("			\n");
      out.write("		</tr>\n");
      out.write("		");

		

		try{ 
		connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/gamingsite?autoReconnect=true&useSSL=false" , "root" ,""); 
		statement = connection.createStatement(); 
		String sql = "SELECT* FROM game"; 
		resultset = statement.executeQuery(sql); 
		while(resultset.next()){

		
      out.write("\n");
      out.write("\n");
      out.write("		<tr >\n");
      out.write("			<td>");
      out.print( resultset.getString("GameID") );
      out.write("</td>\n");
      out.write("			<td>");
      out.print( resultset.getString("GameName") );
      out.write("</td>\n");
      out.write("			<td>");
      out.print( resultset.getString("Price") );
      out.write("</td>\n");
      out.write("			<td>");
      out.print( resultset.getString("Size") );
      out.write("</td>\n");
      out.write("		");
      out.write("\n");
      out.write("			\n");
      out.write("			<td><a href=\"UpdateGameHistory.jsp?GameID=");
      out.print(resultset.getString("GameID"));
      out.write("\">Update</a></td>\n");
      out.write(" 			<td><a href=\"javascript:void(0);\" onclick=\"confirmDelete('");
      out.print(resultset.getString("GameID"));
      out.write("', 'POST');\">Delete</a></td>\n");
      out.write("\n");
      out.write("    		</tr>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("		");

		}
		
		}catch(Exception e)
		{ e.printStackTrace();}
		
      out.write("\n");
      out.write("	</table>\n");
      out.write("	</div>\n");
      out.write("	<div class=\"button-link1\">\n");
      out.write("			<a href=\"AdminDashboard.jsp\"><input type=\"submit\"\n");
      out.write("				value=\"Admin Dashboard\" class=\"add-button\" /></a>\n");
      out.write("	</div>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("function confirmDelete(gameID, method) {\n");
      out.write("    var confirmDelete = confirm(\"Are you sure you want to delete this record?\");\n");
      out.write("    if (confirmDelete) {\n");
      out.write("        if (method === 'POST') {\n");
      out.write("            // Use POST method\n");
      out.write("            var form = document.createElement('form');\n");
      out.write("            form.method = 'post';\n");
      out.write("            form.action = 'DeleteGame';\n");
      out.write("            \n");
      out.write("            var input = document.createElement('input');\n");
      out.write("            input.type = 'hidden';\n");
      out.write("            input.name = 'GameID';\n");
      out.write("            input.value = gameID;\n");
      out.write("            \n");
      out.write("            form.appendChild(input);\n");
      out.write("            document.body.appendChild(form);\n");
      out.write("            form.submit();\n");
      out.write("        } else {\n");
      out.write("            // Use your existing method for other cases\n");
      out.write("            window.location.href = \"DeleteGame?GameID=\" + gameID;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("	\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
